<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:c="http://www.springframework.org/schema/c"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        ">
   <!-- 配置 目标对象 -->
   <bean id="dog" class="cn.bdqn.dao.impl.Dog"/>
   
   <!-- 配置前置增强 -->
   <bean id="before" class="cn.bdqn.advice.AnimalBeforeAdvice"/>
   	<!-- 配置后置 通知 -->
   <bean id="after" class="cn.bdqn.advice.AnimalAfterAdvice"/> 
   
   <!-- 配置环绕 通知 -->
   <bean id="around" class="cn.bdqn.advice.AnimalAroundAdvice"/>
   
   <!-- 自定义通知的切入点 -->
   <bean id="myAdvice" class="org.springframework.aop.support.NameMatchMethodPointcutAdvisor">
   	<property name="advice" ref="before"></property>
   	<property name="mappedNames" >
   		<list>
   			<value>eat</value> <!-- eat之外的方法就不会有前置通知了 -->
   		</list>
   	</property>
   </bean>
   <!-- 生成 代理对象 -->
   <bean id="proxyFactoryBean" class="org.springframework.aop.framework.ProxyFactoryBean">
   	<!-- 设置目标对象(被代理的对象) <property name="targetName" value="dog"/> -->
   	<property name="target" ref="dog"/>
   		<!-- 设置增强方式  同时配置多个增强方式01.value="before,after"-->
   	<property name="interceptorNames">
   		<!-- 02.使用array 
   		<array>
   			<value>before</value>
   			<value>after</value>
   		 </array>-->
   		 <!-- <list>
   		 	<value>before</value>
   		 	<value>after</value>
   		 	<value>around</value>
   		 </list> -->
   		 <list>
   		 	<value>myAdvice</value>
   		 </list>
   		
   	</property>
   		
   </bean>
</beans>